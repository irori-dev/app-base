name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4.4'
        bundler-cache: true
    
    # Slack notification (optional - requires SLACK_BOT_TOKEN and SLACK_CHANNEL_ID secrets)
    - name: Post Slack notification - Start
      id: slack
      if: ${{ env.SLACK_BOT_TOKEN != '' }}
      uses: slackapi/slack-github-action@v1.23.0
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        payload: |
          {
            "text": "CI started: ${{ github.repository }} (In Progress)",
            "attachments": [
              {
                "pretext": "Build #${{ github.run_number }} started",
                "color": "ffc107",
                "fields": [
                  {
                    "title": "Branch",
                    "short": true,
                    "value": "${{ github.ref_name }}"
                  },
                  {
                    "title": "Triggered by",
                    "short": true,
                    "value": "${{ github.actor }}"
                  },
                  {
                    "title": "Commit",
                    "short": false,
                    "value": "${{ github.event.head_commit.message || 'No commit message' }}"
                  }
                ]
              }
            ]
          }
    
    - name: Setup database
      env:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/app_base_test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        PGPASSWORD: postgres
      run: |
        # Create all databases
        createdb -h localhost -U postgres app_base_test || true
        createdb -h localhost -U postgres cache_test || true
        createdb -h localhost -U postgres queue_test || true
        
        # Apply schemas
        bin/rails ridgepole:apply DATABASE=primary
        bin/rails ridgepole:apply DATABASE=cache
        bin/rails ridgepole:apply DATABASE=queue
    
    - name: Run tests
      env:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/app_base_test
      run: bin/rspec
    
    - name: Run RuboCop
      run: bin/rubocop
    
    - name: Run Brakeman
      run: bin/brakeman -q -w2
    
    # Update Slack notification - Failed
    - name: Update Slack notification - Failed
      if: ${{ failure() && env.SLACK_BOT_TOKEN != '' && steps.slack.outputs.ts != '' }}
      uses: slackapi/slack-github-action@v1.23.0
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        update-ts: ${{ steps.slack.outputs.ts }}
        payload: |
          {
            "text": "CI failed: ${{ github.repository }}",
            "attachments": [
              {
                "pretext": "Build #${{ github.run_number }} failed",
                "color": "dc3545",
                "fields": [
                  {
                    "title": "Branch",
                    "short": true,
                    "value": "${{ github.ref_name }}"
                  },
                  {
                    "title": "Status",
                    "short": true,
                    "value": "Failed ❌"
                  },
                  {
                    "title": "Details",
                    "short": false,
                    "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run>"
                  }
                ]
              }
            ]
          }
    
    # Update Slack notification - Success
    - name: Update Slack notification - Success
      if: ${{ success() && env.SLACK_BOT_TOKEN != '' && steps.slack.outputs.ts != '' }}
      uses: slackapi/slack-github-action@v1.23.0
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        update-ts: ${{ steps.slack.outputs.ts }}
        payload: |
          {
            "text": "CI passed: ${{ github.repository }}",
            "attachments": [
              {
                "pretext": "Build #${{ github.run_number }} succeeded",
                "color": "28a745",
                "fields": [
                  {
                    "title": "Branch",
                    "short": true,
                    "value": "${{ github.ref_name }}"
                  },
                  {
                    "title": "Status",
                    "short": true,
                    "value": "Success ✅"
                  }
                ]
              }
            ]
          }

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t app-base:test .
    
    - name: Test Docker image
      run: |
        docker run --rm app-base:test rails --version
        docker run --rm app-base:test ruby --version