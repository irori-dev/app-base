AWSTemplateFormatVersion: '2010-09-09'
Description: Infrastructure resources for app-base (ALB, IAM, Logs, Target Group)

Parameters:
  AppName:
    Type: String
  AppPort:
    Type: Number
    Default: 3000
  AppHostName:
    Type: String

  # 既存リソース
  AlbListenerArn:
    Type: String
    Default: arn:aws:elasticloadbalancing:ap-northeast-1:435917083888:listener/app/workshop-app-prod-alb/7aa0910a0c85959e/afe92482bb237c19
  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-0f9bfe9c5d7e23930

  # SSM Parameter Store（Secrets）ARN
  DatabaseUrlArn:
    Type: String
  CacheDatabaseUrlArn:
    Type: String
  QueueDatabaseUrlArn:
    Type: String
  RailsMasterKeyArn:
    Type: String

Resources:
  # CloudWatch Logs Group
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: "/ecs/${AppName}"
      RetentionInDays: 7

  # ECS Task Execution Role
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: "${AppName}-execution-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:GetParametersByPath                  
                Resource:
                  - Ref: DatabaseUrlArn
                  - Ref: CacheDatabaseUrlArn
                  - Ref: QueueDatabaseUrlArn
                  - Ref: RailsMasterKeyArn

  # ECS Task Role
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: "${AppName}-task-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  # ALB Target Group
  AppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name:
        Fn::Sub: "${AppName}-tg"
      VpcId:
        Ref: VpcId
      Port:
        Ref: AppPort
      Protocol: HTTP
      TargetType: ip
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      Matcher:
        HttpCode: '200'

  # ALB Listener Rule
  AppListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: 
        Ref: AlbListenerArn
      Actions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: 
                  Ref: AppTargetGroup
                Weight: 100
      Conditions:
        - Field: host-header
          Values:
            - Ref: AppHostName

Outputs:
  LogGroupName:
    Description: CloudWatch Log Group Name
    Value: 
      Ref: LogGroup
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-LogGroupName"
      
  TaskExecutionRoleArn:
    Description: ECS Task Execution Role ARN
    Value: 
      Fn::GetAtt: TaskExecutionRole.Arn
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-TaskExecutionRoleArn"
      
  TaskRoleArn:
    Description: ECS Task Role ARN
    Value: 
      Fn::GetAtt: TaskRole.Arn
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-TaskRoleArn"
      
  TargetGroupArn:
    Description: Target Group ARN
    Value: 
      Ref: AppTargetGroup
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-TargetGroupArn"
