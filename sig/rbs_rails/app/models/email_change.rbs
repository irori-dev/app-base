class EmailChange < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[EmailChange, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def email_changeable_id: () -> Integer?

    def email_changeable_id=: (Integer?) -> Integer?

    def email_changeable_id?: () -> bool

    def email_changeable_id_changed?: () -> bool

    def email_changeable_id_change: () -> [ Integer?, Integer? ]

    def email_changeable_id_will_change!: () -> void

    def email_changeable_id_was: () -> Integer?

    def email_changeable_id_previously_changed?: () -> bool

    def email_changeable_id_previous_change: () -> Array[Integer?]?

    def email_changeable_id_previously_was: () -> Integer?

    def email_changeable_id_before_last_save: () -> Integer?

    def email_changeable_id_change_to_be_saved: () -> Array[Integer?]?

    def email_changeable_id_in_database: () -> Integer?

    def saved_change_to_email_changeable_id: () -> Array[Integer?]?

    def saved_change_to_email_changeable_id?: () -> bool

    def will_save_change_to_email_changeable_id?: () -> bool

    def restore_email_changeable_id!: () -> void

    def clear_email_changeable_id_change: () -> void

    def email_changeable_type: () -> String?

    def email_changeable_type=: (String?) -> String?

    def email_changeable_type?: () -> bool

    def email_changeable_type_changed?: () -> bool

    def email_changeable_type_change: () -> [ String?, String? ]

    def email_changeable_type_will_change!: () -> void

    def email_changeable_type_was: () -> String?

    def email_changeable_type_previously_changed?: () -> bool

    def email_changeable_type_previous_change: () -> Array[String?]?

    def email_changeable_type_previously_was: () -> String?

    def email_changeable_type_before_last_save: () -> String?

    def email_changeable_type_change_to_be_saved: () -> Array[String?]?

    def email_changeable_type_in_database: () -> String?

    def saved_change_to_email_changeable_type: () -> Array[String?]?

    def saved_change_to_email_changeable_type?: () -> bool

    def will_save_change_to_email_changeable_type?: () -> bool

    def restore_email_changeable_type!: () -> void

    def clear_email_changeable_type_change: () -> void

    def change_digest: () -> String

    def change_digest=: (String) -> String

    def change_digest?: () -> bool

    def change_digest_changed?: () -> bool

    def change_digest_change: () -> [ String?, String? ]

    def change_digest_will_change!: () -> void

    def change_digest_was: () -> String?

    def change_digest_previously_changed?: () -> bool

    def change_digest_previous_change: () -> Array[String?]?

    def change_digest_previously_was: () -> String?

    def change_digest_before_last_save: () -> String?

    def change_digest_change_to_be_saved: () -> Array[String?]?

    def change_digest_in_database: () -> String?

    def saved_change_to_change_digest: () -> Array[String?]?

    def saved_change_to_change_digest?: () -> bool

    def will_save_change_to_change_digest?: () -> bool

    def restore_change_digest!: () -> void

    def clear_change_digest_change: () -> void

    def email: () -> String

    def email=: (String) -> String

    def email?: () -> bool

    def email_changed?: () -> bool

    def email_change: () -> [ String?, String? ]

    def email_will_change!: () -> void

    def email_was: () -> String?

    def email_previously_changed?: () -> bool

    def email_previous_change: () -> Array[String?]?

    def email_previously_was: () -> String?

    def email_before_last_save: () -> String?

    def email_change_to_be_saved: () -> Array[String?]?

    def email_in_database: () -> String?

    def saved_change_to_email: () -> Array[String?]?

    def saved_change_to_email?: () -> bool

    def will_save_change_to_email?: () -> bool

    def restore_email!: () -> void

    def clear_email_change: () -> void

    def changed_at: () -> ActiveSupport::TimeWithZone?

    def changed_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def changed_at?: () -> bool

    def changed_at_changed?: () -> bool

    def changed_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def changed_at_will_change!: () -> void

    def changed_at_was: () -> ActiveSupport::TimeWithZone?

    def changed_at_previously_changed?: () -> bool

    def changed_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def changed_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def changed_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def changed_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def changed_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_changed_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_changed_at?: () -> bool

    def will_save_change_to_changed_at?: () -> bool

    def restore_changed_at!: () -> void

    def clear_changed_at_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def email_changeable: () -> untyped
  def email_changeable=: (untyped?) -> untyped?
  def reload_email_changeable: () -> untyped?
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  def self.not_expired: () -> ActiveRecord_Relation
  def self.not_changed: () -> ActiveRecord_Relation
  def self.detected_by: (untyped token) -> ActiveRecord_Relation

  module GeneratedRelationMethods
    def not_expired: () -> ActiveRecord_Relation

    def not_changed: () -> ActiveRecord_Relation

    def detected_by: (untyped token) -> ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmailChange, Integer]
    include Enumerable[EmailChange]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmailChange, Integer]
  end
end
